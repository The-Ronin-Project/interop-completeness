[versions]
datadog = "1.29.0"
dbrider = "1.39.0"
graphql-kotlin = "7.0.2"
interop-common = "4.1.0"
interop-event-internal = "1.3.0"
interop-fhir = "9.1.1"
interop-gradle = "4.0.3"
interop-kafka = "9.1.0"
jakarta = "3.0.2"
# @keep for forcing version
kotlin = "1.9.22"
kotlinx-coroutines = "1.7.3"
ktor = "2.3.8"
logstash = "7.4"
mockk = "1.13.9"
mockwebserver = "4.12.0"
ronin-kafka = "1.1.2"
ronin-test = "0.2.0"
spring-boot = "3.2.2"
spring-kafka = "3.1.1"
springdoc = "2.3.0"
testcontainers = "1.19.5"

[libraries]
dd-trace-api = { module = "com.datadoghq:dd-trace-api", version.ref = "datadog" }
graphql-kotlin-schema-generator = { module = "com.expediagroup:graphql-kotlin-schema-generator", version.ref = "graphql-kotlin" }
graphql-kotlin-spring-server = { module = "com.expediagroup:graphql-kotlin-spring-server", version.ref = "graphql-kotlin" }
interop-common = { module = "com.projectronin.interop:interop-common", version.ref = "interop-common" }
interop-commonHttp = { module = "com.projectronin.interop:interop-common-http", version.ref = "interop-common" }
interop-commonJackson = { module = "com.projectronin.interop:interop-common-jackson", version.ref = "interop-common" }
interop-fhir = { module = "com.projectronin.interop.fhir:interop-fhir", version.ref = "interop-fhir" }
interop-fhir-generators = { module = "com.projectronin.interop.fhir:interop-fhir-generators", version.ref = "interop-fhir" }
interop-kafka = { module = "com.projectronin.interop.publish:interop-kafka", version.ref = "interop-kafka" }
interop-kafka-events-internal = { module = "com.projectronin.contract.event:event-interop-resource-internal", version.ref = "interop-event-internal" }
interop-kafka-testing-client = { module = "com.projectronin.interop.publish:interop-kafka-testing-client", version.ref = "interop-kafka" }
jakarta-validation-api = { module = "jakarta.validation:jakarta.validation-api", version.ref = "jakarta" }
# @keep to force version
kotlin-bom = { module = "org.jetbrains.kotlin:kotlin-bom", version.ref = "kotlin" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
ktor-client-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
logstash-logback-encoder = { module = "net.logstash.logback:logstash-logback-encoder", version.ref = "logstash" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
mockwebserver = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "mockwebserver" }
# @keep Wants to throw this out during upgrades for some reason.
rider-core = { module = "com.github.database-rider:rider-core", version.ref = "dbrider" }
ronin-kafka = { module = "com.projectronin:ronin-kafka", version.ref = "ronin-kafka" }
ronin-test-data-generator = { module = "com.projectronin.test:ronin-test-data-generator", version.ref = "ronin-test" }
spring-boot-parent = { module = "org.springframework.boot:spring-boot-parent", version.ref = "spring-boot" }
spring-boot-starter = { module = "org.springframework.boot:spring-boot-starter", version.ref = "spring-boot" }
spring-boot-starter-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator", version.ref = "spring-boot" }
spring-boot-starter-validation = { module = "org.springframework.boot:spring-boot-starter-validation", version.ref = "spring-boot" }
spring-boot-starter-web = { module = "org.springframework.boot:spring-boot-starter-jdbc", version.ref = "spring-boot" }
spring-kafka = { module = "org.springframework.kafka:spring-kafka", version.ref = "spring-kafka" }
springdoc-openapi-ui = { module = "org.springdoc:springdoc-openapi-starter-webmvc-ui", version.ref = "springdoc" }
testcontainers-bom = { module = "org.testcontainers:testcontainers-bom", version.ref = "testcontainers" }

[bundles]
graphql = [
    "graphql-kotlin-schema-generator",
    "graphql-kotlin-spring-server",
]
ktor = [
    "ktor-client-auth",
    "ktor-client-cio",
]
spring-boot-starter = [
    "spring-boot-starter",
    "spring-boot-starter-actuator",
    "spring-boot-starter-web",
]

[plugins]
graphql = { id = "com.expediagroup.graphql", version.ref = "graphql-kotlin" }
interop-gradle-docker-integration = { id = "com.projectronin.interop.gradle.docker-integration", version.ref = "interop-gradle" }
interop-gradle-junit = { id = "com.projectronin.interop.gradle.junit", version.ref = "interop-gradle" }
interop-gradle-server-version = { id = "com.projectronin.interop.gradle.server-version", version.ref = "interop-gradle" }
interop-gradle-spring-boot = { id = "com.projectronin.interop.gradle.spring-boot", version.ref = "interop-gradle" }
interop-gradle-spring-framework = { id = "com.projectronin.interop.gradle.spring", version.ref = "interop-gradle" }
interop-gradle-version-catalog = { id = "com.projectronin.interop.gradle.version-catalog-update", version.ref = "interop-gradle" }
interop-sonarqube = { id = "com.projectronin.interop.gradle.sonarqube", version.ref = "interop-gradle" }
